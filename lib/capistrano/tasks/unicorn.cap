namespace :unicorn do
	desc "Setup unicorn"
  task :setup do
		invoke 'unicorn:create_config'
#		invoke 'unicorn:create_init'
 	end
  
  desc "Setup unicorn.rb config file"
  task :create_config do
  	on roles(:app) do |host|
  		#execute :echo, "\"working_directory \\\"#{fetch(:deploy_to)}\\\"\" > /tmp/unicorn.rb"
  		default_template = <<-EOF
working_directory \\\"#{fetch(:deploy_to)}\\\"
pid \\\"#{fetch(:deploy_to)}/tmp/pids/unicorn.pid\\\"
stderr_path \\\"#{fetch(:deploy_to)}/log/unicorn.log\\\"
stdout_path \\\"#{fetch(:deploy_to)}/log/unicorn.log\\\"

listen \\\"/tmp/unicorn.#{fetch(:application)}.sock\\\"
worker_processes 2
timeout 30
EOF
			execute :echo, "\"#{default_template}\" > /tmp/unicorn.rb"
			execute :mv, '/tmp/unicorn.rb', "#{shared_path}/config/unicorn.rb"
  	end
  end
  
  desc "Setup unicorn_init.sh file"
  task :create_init do
  	on roles(:app) do |host|
			default_template = <<-EOF
#!/bin/sh
### BEGIN INIT INFO
# Provides: unicorn
# Required-Start: $remote_fs $syslog
# Required-Stop: $remote_fs $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Manage unicorn server
# Description: Start, stop, restart unicorn server for a specific application.
### END INIT INFO
set -e

# Feel free to change any of the following variables for your app:
TIMEOUT=${TIMEOUT-60}
APP_ROOT=#{fetch(:deploy_to)}
PID=$APP_ROOT/tmp/pids/unicorn.pid
CMD=///"cd #{fetch(:deploy_to)}; bundle exec unicorn -D -c #{fetch(:deploy_to)}/config/unicorn.rb -E production///"
AS_USER=deploy
set -u

#test -f \\\"$INIT_CONF\\\" && . $INIT_CONF
EOF
			execute :echo, "\"#{default_template}\" > /tmp/unicorn_init.sh"
#			execute :mv, '/tmp/unicorn_init.sh', "#{shared_path}/config/unicorn_init.sh"
  	end
  end
  
  %w[start stop restart].each do |command|
	  desc "#{command} unicorn server"
		task command do
			on roles(:app) do |host|
				execute "/etc/init.d/unicorn_#{fetch(:application)} #{command}"
			end
	  end
	end
end