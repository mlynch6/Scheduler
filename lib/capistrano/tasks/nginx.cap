namespace :nginx do
	desc "Install latest stable release of nginx"
	task :install do
		on roles(:web) do |host|
			execute 'sudo add-apt-repository ppa:nginx/stable'
			execute 'sudo apt-get -y update'
			execute 'sudo apt-get -y install nginx'
		end
  end
  
  desc "Setup nginx"
  task :setup do
  	on roles(:web) do |host|
  		#Archive orig nginx.conf file
  		unless test "[ -f /etc/nginx/nginx.conf.old ]"
  			execute 'sudo cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.old'
  		end
  		
  		#Remove default from sites-enabled
			if test "[ -L /etc/nginx/sites-enabled/default ]"
				execute 'sudo rm /etc/nginx/sites-enabled/default'
			end
  	end
  end
  after 'nginx:setup', 'nginx:create_config'

  desc "Create nginx.conf file in sites-enabled"
  task :create_config do
  	on roles(:web) do |host|
  		default_template = <<-EOF
upstream unicorn {
  server unix:/tmp/unicorn.#{fetch(:application)}.sock fail_timeout=0;
}

server {
  listen 80 default deferred;
  # server_name localhost;
  root #{current_path}/public;
  
  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }
EOF
			execute :echo, "\"#{default_template}\" > /tmp/nginx.conf"
			
			execute :echo, "'  try_files $uri/index.html $uri @unicorn;' >> /tmp/nginx.conf"
			execute :echo, "'  location @unicorn {' >> /tmp/nginx.conf"
			execute :echo, "'    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;' >> /tmp/nginx.conf"
			execute :echo, "'    proxy_set_header Host $http_host;' >> /tmp/nginx.conf"
		
			default_template = <<-EOF  	
    proxy_redirect off;
    proxy_pass http://unicorn;
  }
  
  error_page 500 502 503 504 /500.html;
  client_max_body_size 4G;
  keepalive_timeout 10;
}
EOF
			execute :echo, "\"#{default_template}\" >> /tmp/nginx.conf"
			execute :mv, '/tmp/nginx.conf', "#{shared_path}/config/nginx.conf"
			
			#Create nginx.conf as linked file in sites-enabled
			unless test "[ -L /etc/nginx/sites-enabled/#{fetch(:application)} ]"
				execute "sudo ln -s #{current_path}/config/nginx.conf /etc/nginx/sites-enabled/#{fetch(:application)}"
			end
  	end
  end
  
  desc "Check nginx version"
  task :check do
  	on roles(:web) do |host|
  		execute 'nginx -v'
  	end
  end
  
  %w[start stop restart].each do |command|
	  desc "#{command} nginx"
		task command do
			on roles(:web) do |host|
				execute "sudo service nginx #{command}"
			end
	  end
	end
end